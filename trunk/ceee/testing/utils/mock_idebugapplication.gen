// Copyright (c) 2010 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Auto-generated by com_mock.py

MOCK_METHOD3_WITH_CALLTYPE(__stdcall, ResumeFromBreakPoint, HRESULT(
    IRemoteDebugApplicationThread *prptFocus, BREAKRESUMEACTION bra,
    ERRORRESUMEACTION era));
MOCK_METHOD0_WITH_CALLTYPE(__stdcall, CauseBreak, HRESULT());
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, ConnectDebugger, HRESULT(
    IApplicationDebugger *pad));
MOCK_METHOD0_WITH_CALLTYPE(__stdcall, DisconnectDebugger, HRESULT());
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, GetDebugger, HRESULT(
    IApplicationDebugger *__RPC_FAR *pad));
MOCK_METHOD5_WITH_CALLTYPE(__stdcall, CreateInstanceAtApplication, HRESULT(
    REFCLSID rclsid, IUnknown *pUnkOuter, DWORD dwClsContext, REFIID riid,
    IUnknown *__RPC_FAR *ppvObject));
MOCK_METHOD0_WITH_CALLTYPE(__stdcall, QueryAlive, HRESULT());
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, EnumThreads, HRESULT(
    IEnumRemoteDebugApplicationThreads *__RPC_FAR *pperdat));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, GetName, HRESULT(BSTR *pbstrName));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, GetRootNode, HRESULT(
    IDebugApplicationNode *__RPC_FAR *ppdanRoot));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, EnumGlobalExpressionContexts, HRESULT(
    IEnumDebugExpressionContexts *__RPC_FAR *ppedec));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, SetName, HRESULT(LPCOLESTR pstrName));
MOCK_METHOD0_WITH_CALLTYPE(__stdcall, StepOutComplete, HRESULT());
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, DebugOutput, HRESULT(LPCOLESTR pstr));
MOCK_METHOD0_WITH_CALLTYPE(__stdcall, StartDebugSession, HRESULT());
MOCK_METHOD2_WITH_CALLTYPE(__stdcall, HandleBreakPoint, HRESULT(
    BREAKREASON br, BREAKRESUMEACTION *pbra));
MOCK_METHOD0_WITH_CALLTYPE(__stdcall, Close, HRESULT());
MOCK_METHOD2_WITH_CALLTYPE(__stdcall, GetBreakFlags, HRESULT(
    APPBREAKFLAGS *pabf,
    IRemoteDebugApplicationThread *__RPC_FAR *pprdatSteppingThread));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, GetCurrentThread, HRESULT(
    IDebugApplicationThread *__RPC_FAR *pat));
MOCK_METHOD2_WITH_CALLTYPE(__stdcall, CreateAsyncDebugOperation, HRESULT(
    IDebugSyncOperation *psdo, IDebugAsyncOperation *__RPC_FAR *ppado));
MOCK_METHOD2_WITH_CALLTYPE(__stdcall, AddStackFrameSniffer, HRESULT(
    IDebugStackFrameSniffer *pdsfs, DWORD *pdwCookie));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, RemoveStackFrameSniffer, HRESULT(
    DWORD dwCookie));
MOCK_METHOD0_WITH_CALLTYPE(__stdcall, QueryCurrentThreadIsDebuggerThread,
    HRESULT());
MOCK_METHOD4_WITH_CALLTYPE(__stdcall, SynchronousCallInDebuggerThread, HRESULT(
    IDebugThreadCall *pptc, DWORD dwParam1, DWORD dwParam2, DWORD dwParam3));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, CreateApplicationNode, HRESULT(
    IDebugApplicationNode *__RPC_FAR *ppdanNew));
MOCK_METHOD2_WITH_CALLTYPE(__stdcall, FireDebuggerEvent, HRESULT(
    REFGUID riid, IUnknown *punk));
MOCK_METHOD5_WITH_CALLTYPE(__stdcall, HandleRuntimeError, HRESULT(
    IActiveScriptErrorDebug *pErrorDebug, IActiveScriptSite *pScriptSite,
    BREAKRESUMEACTION *pbra, ERRORRESUMEACTION *perra,
    BOOL *pfCallOnScriptError));
MOCK_METHOD0_WITH_CALLTYPE(__stdcall, FCanJitDebug, BOOL());
MOCK_METHOD0_WITH_CALLTYPE(__stdcall, FIsAutoJitDebugEnabled, BOOL());
MOCK_METHOD2_WITH_CALLTYPE(__stdcall, AddGlobalExpressionContextProvider,
    HRESULT(IProvideExpressionContexts *pdsfs, DWORD *pdwCookie));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, RemoveGlobalExpressionContextProvider,
    HRESULT(DWORD dwCookie));
