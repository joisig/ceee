// Copyright (c) 2010 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Auto-generated by com_mock.py

MOCK_METHOD1_WITH_CALLTYPE(__stdcall, SetScriptSite, HRESULT(
    IActiveScriptSite *pass));
MOCK_METHOD2_WITH_CALLTYPE(__stdcall, GetScriptSite, HRESULT(
    REFIID riid, void *__RPC_FAR *ppvObject));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, SetScriptState, HRESULT(
    SCRIPTSTATE ss));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, GetScriptState, HRESULT(
    SCRIPTSTATE *pssState));
MOCK_METHOD0_WITH_CALLTYPE(__stdcall, Close, HRESULT());
MOCK_METHOD2_WITH_CALLTYPE(__stdcall, AddNamedItem, HRESULT(
    LPCOLESTR pstrName, DWORD dwFlags));
MOCK_METHOD4_WITH_CALLTYPE(__stdcall, AddTypeLib, HRESULT(
    REFGUID rguidTypeLib, DWORD dwMajor, DWORD dwMinor, DWORD dwFlags));
MOCK_METHOD2_WITH_CALLTYPE(__stdcall, GetScriptDispatch, HRESULT(
    LPCOLESTR pstrItemName, IDispatch *__RPC_FAR *ppdisp));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, GetCurrentScriptThreadID, HRESULT(
    SCRIPTTHREADID *pstidThread));
MOCK_METHOD2_WITH_CALLTYPE(__stdcall, GetScriptThreadID, HRESULT(
    DWORD dwWin32ThreadId, SCRIPTTHREADID *pstidThread));
MOCK_METHOD2_WITH_CALLTYPE(__stdcall, GetScriptThreadState, HRESULT(
    SCRIPTTHREADID stidThread, SCRIPTTHREADSTATE *pstsState));
MOCK_METHOD3_WITH_CALLTYPE(__stdcall, InterruptScriptThread, HRESULT(
    SCRIPTTHREADID stidThread, const EXCEPINFO *pexcepinfo, DWORD dwFlags));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, Clone, HRESULT(
    IActiveScript *__RPC_FAR *ppscript));
