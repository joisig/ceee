// Copyright (c) 2010 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Auto-generated by com_mock.py

MOCK_METHOD4_WITH_CALLTYPE(__stdcall, Init, HRESULT(
    IDebugApplication *pda, LPCOLESTR pszShortName, LPCOLESTR pszLongName,
    TEXT_DOC_ATTR docAttr));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, Attach, HRESULT(
    IDebugDocumentHelper *pddhParent));
MOCK_METHOD0_WITH_CALLTYPE(__stdcall, Detach, HRESULT());
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, AddUnicodeText, HRESULT(
    LPCOLESTR pszText));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, AddDBCSText, HRESULT(LPCSTR pszText));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, SetDebugDocumentHost, HRESULT(
    IDebugDocumentHost *pddh));
MOCK_METHOD2_WITH_CALLTYPE(__stdcall, AddDeferredText, HRESULT(
    ULONG cChars, DWORD dwTextStartCookie));
MOCK_METHOD5_WITH_CALLTYPE(__stdcall, DefineScriptBlock, HRESULT(
    ULONG ulCharOffset, ULONG cChars, IActiveScript *pas, BOOL fScriptlet,
    DWORD *pdwSourceContext));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, SetDefaultTextAttr, HRESULT(
    SOURCE_TEXT_ATTR staTextAttr));
MOCK_METHOD3_WITH_CALLTYPE(__stdcall, SetTextAttributes, HRESULT(
    ULONG ulCharOffset, ULONG cChars, SOURCE_TEXT_ATTR *pstaTextAttr));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, SetLongName, HRESULT(
    LPCOLESTR pszLongName));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, SetShortName, HRESULT(
    LPCOLESTR pszShortName));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, SetDocumentAttr, HRESULT(
    TEXT_DOC_ATTR pszAttributes));
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, GetDebugApplicationNode, HRESULT(
    IDebugApplicationNode *__RPC_FAR *ppdan));
MOCK_METHOD4_WITH_CALLTYPE(__stdcall, GetScriptBlockInfo, HRESULT(
    DWORD dwSourceContext, IActiveScript *__RPC_FAR *ppasd, ULONG *piCharPos,
    ULONG *pcChars));
MOCK_METHOD3_WITH_CALLTYPE(__stdcall, CreateDebugDocumentContext, HRESULT(
    ULONG iCharPos, ULONG cChars, IDebugDocumentContext *__RPC_FAR *ppddc));
MOCK_METHOD0_WITH_CALLTYPE(__stdcall, BringDocumentToTop, HRESULT());
MOCK_METHOD1_WITH_CALLTYPE(__stdcall, BringDocumentContextToTop, HRESULT(
    IDebugDocumentContext *pddc));
